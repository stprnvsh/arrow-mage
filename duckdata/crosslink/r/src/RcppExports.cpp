// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// crosslink_connect
SEXP crosslink_connect(std::string db_path, bool debug);
RcppExport SEXP _CrossLink_crosslink_connect(SEXP db_pathSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type db_path(db_pathSEXP);
    Rcpp::traits::input_parameter< bool >::type debug(debugSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_connect(db_path, debug));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_push
std::string crosslink_push(SEXP cl_ptr, SEXP arrow_table, std::string name, std::string description);
RcppExport SEXP _CrossLink_crosslink_push(SEXP cl_ptrSEXP, SEXP arrow_tableSEXP, SEXP nameSEXP, SEXP descriptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< SEXP >::type arrow_table(arrow_tableSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type description(descriptionSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_push(cl_ptr, arrow_table, name, description));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_pull
SEXP crosslink_pull(SEXP cl_ptr, std::string identifier);
RcppExport SEXP _CrossLink_crosslink_pull(SEXP cl_ptrSEXP, SEXP identifierSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type identifier(identifierSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_pull(cl_ptr, identifier));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_query
SEXP crosslink_query(SEXP cl_ptr, std::string sql);
RcppExport SEXP _CrossLink_crosslink_query(SEXP cl_ptrSEXP, SEXP sqlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type sql(sqlSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_query(cl_ptr, sql));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_list_datasets
std::vector<std::string> crosslink_list_datasets(SEXP cl_ptr);
RcppExport SEXP _CrossLink_crosslink_list_datasets(SEXP cl_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_list_datasets(cl_ptr));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_push_stream
Rcpp::List crosslink_push_stream(SEXP cl_ptr, SEXP schema, std::string name);
RcppExport SEXP _CrossLink_crosslink_push_stream(SEXP cl_ptrSEXP, SEXP schemaSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< SEXP >::type schema(schemaSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_push_stream(cl_ptr, schema, name));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_pull_stream
SEXP crosslink_pull_stream(SEXP cl_ptr, std::string stream_id);
RcppExport SEXP _CrossLink_crosslink_pull_stream(SEXP cl_ptrSEXP, SEXP stream_idSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type stream_id(stream_idSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_pull_stream(cl_ptr, stream_id));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_stream_writer_write_batch
void crosslink_stream_writer_write_batch(SEXP writer_ptr, SEXP batch);
RcppExport SEXP _CrossLink_crosslink_stream_writer_write_batch(SEXP writer_ptrSEXP, SEXP batchSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type writer_ptr(writer_ptrSEXP);
    Rcpp::traits::input_parameter< SEXP >::type batch(batchSEXP);
    crosslink_stream_writer_write_batch(writer_ptr, batch);
    return R_NilValue;
END_RCPP
}
// crosslink_stream_writer_close
void crosslink_stream_writer_close(SEXP writer_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_writer_close(SEXP writer_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type writer_ptr(writer_ptrSEXP);
    crosslink_stream_writer_close(writer_ptr);
    return R_NilValue;
END_RCPP
}
// crosslink_stream_writer_schema
SEXP crosslink_stream_writer_schema(SEXP writer_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_writer_schema(SEXP writer_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type writer_ptr(writer_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_stream_writer_schema(writer_ptr));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_stream_writer_id
std::string crosslink_stream_writer_id(SEXP writer_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_writer_id(SEXP writer_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type writer_ptr(writer_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_stream_writer_id(writer_ptr));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_stream_reader_read_next_batch
SEXP crosslink_stream_reader_read_next_batch(SEXP reader_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_reader_read_next_batch(SEXP reader_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type reader_ptr(reader_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_stream_reader_read_next_batch(reader_ptr));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_stream_reader_close
void crosslink_stream_reader_close(SEXP reader_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_reader_close(SEXP reader_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type reader_ptr(reader_ptrSEXP);
    crosslink_stream_reader_close(reader_ptr);
    return R_NilValue;
END_RCPP
}
// crosslink_stream_reader_schema
SEXP crosslink_stream_reader_schema(SEXP reader_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_reader_schema(SEXP reader_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type reader_ptr(reader_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_stream_reader_schema(reader_ptr));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_stream_reader_id
std::string crosslink_stream_reader_id(SEXP reader_ptr);
RcppExport SEXP _CrossLink_crosslink_stream_reader_id(SEXP reader_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type reader_ptr(reader_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_stream_reader_id(reader_ptr));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_register_notification
std::string crosslink_register_notification(SEXP cl_ptr, Function callback);
RcppExport SEXP _CrossLink_crosslink_register_notification(SEXP cl_ptrSEXP, SEXP callbackSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< Function >::type callback(callbackSEXP);
    rcpp_result_gen = Rcpp::wrap(crosslink_register_notification(cl_ptr, callback));
    return rcpp_result_gen;
END_RCPP
}
// crosslink_unregister_notification
void crosslink_unregister_notification(SEXP cl_ptr, std::string registration_id);
RcppExport SEXP _CrossLink_crosslink_unregister_notification(SEXP cl_ptrSEXP, SEXP registration_idSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type registration_id(registration_idSEXP);
    crosslink_unregister_notification(cl_ptr, registration_id);
    return R_NilValue;
END_RCPP
}
// crosslink_cleanup
void crosslink_cleanup(SEXP cl_ptr);
RcppExport SEXP _CrossLink_crosslink_cleanup(SEXP cl_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cl_ptr(cl_ptrSEXP);
    crosslink_cleanup(cl_ptr);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CrossLink_crosslink_connect", (DL_FUNC) &_CrossLink_crosslink_connect, 2},
    {"_CrossLink_crosslink_push", (DL_FUNC) &_CrossLink_crosslink_push, 4},
    {"_CrossLink_crosslink_pull", (DL_FUNC) &_CrossLink_crosslink_pull, 2},
    {"_CrossLink_crosslink_query", (DL_FUNC) &_CrossLink_crosslink_query, 2},
    {"_CrossLink_crosslink_list_datasets", (DL_FUNC) &_CrossLink_crosslink_list_datasets, 1},
    {"_CrossLink_crosslink_push_stream", (DL_FUNC) &_CrossLink_crosslink_push_stream, 3},
    {"_CrossLink_crosslink_pull_stream", (DL_FUNC) &_CrossLink_crosslink_pull_stream, 2},
    {"_CrossLink_crosslink_stream_writer_write_batch", (DL_FUNC) &_CrossLink_crosslink_stream_writer_write_batch, 2},
    {"_CrossLink_crosslink_stream_writer_close", (DL_FUNC) &_CrossLink_crosslink_stream_writer_close, 1},
    {"_CrossLink_crosslink_stream_writer_schema", (DL_FUNC) &_CrossLink_crosslink_stream_writer_schema, 1},
    {"_CrossLink_crosslink_stream_writer_id", (DL_FUNC) &_CrossLink_crosslink_stream_writer_id, 1},
    {"_CrossLink_crosslink_stream_reader_read_next_batch", (DL_FUNC) &_CrossLink_crosslink_stream_reader_read_next_batch, 1},
    {"_CrossLink_crosslink_stream_reader_close", (DL_FUNC) &_CrossLink_crosslink_stream_reader_close, 1},
    {"_CrossLink_crosslink_stream_reader_schema", (DL_FUNC) &_CrossLink_crosslink_stream_reader_schema, 1},
    {"_CrossLink_crosslink_stream_reader_id", (DL_FUNC) &_CrossLink_crosslink_stream_reader_id, 1},
    {"_CrossLink_crosslink_register_notification", (DL_FUNC) &_CrossLink_crosslink_register_notification, 2},
    {"_CrossLink_crosslink_unregister_notification", (DL_FUNC) &_CrossLink_crosslink_unregister_notification, 2},
    {"_CrossLink_crosslink_cleanup", (DL_FUNC) &_CrossLink_crosslink_cleanup, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CrossLink(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
